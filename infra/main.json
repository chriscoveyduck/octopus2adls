{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.38.33.27573",
      "templateHash": "17840759422405417381"
    }
  },
  "parameters": {
    "baseName": {
      "type": "string",
      "metadata": {
        "description": "Base name prefix for all resources"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for resources"
      }
    },
    "storageSku": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS"
      ],
      "metadata": {
        "description": "Storage account SKU"
      }
    },
    "enableLogAnalytics": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Enable creation of Log Analytics workspace"
      }
    },
    "functionSku": {
      "type": "string",
      "defaultValue": "Y1",
      "metadata": {
        "description": "Function App plan SKU (Y1 for consumption)"
      }
    },
    "functionStorageSku": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS"
      ],
      "metadata": {
        "description": "Function storage account SKU"
      }
    },
    "tags": {
      "type": "object",
      "defaultValue": {},
      "metadata": {
        "description": "Tags to apply to all resources"
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2025-04-01",
      "name": "[format('{0}-storage', parameters('baseName'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "baseName": {
            "value": "[parameters('baseName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "sku": {
            "value": "[parameters('storageSku')]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.38.33.27573",
              "templateHash": "4767976886634828080"
            }
          },
          "parameters": {
            "baseName": {
              "type": "string",
              "metadata": {
                "description": "Base name prefix"
              }
            },
            "location": {
              "type": "string"
            },
            "sku": {
              "type": "string",
              "defaultValue": "Standard_LRS"
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            }
          },
          "variables": {
            "rawName": "[toLower(replace(format('{0}data', parameters('baseName')), '-', ''))]",
            "cleaned": "[replace(replace(variables('rawName'), '_', ''), '.', '')]",
            "storageName": "[if(greater(length(variables('cleaned')), 24), substring(variables('cleaned'), 0, 24), variables('cleaned'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2023-01-01",
              "name": "[variables('storageName')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "[parameters('sku')]"
              },
              "kind": "StorageV2",
              "properties": {
                "minimumTlsVersion": "TLS1_2",
                "allowBlobPublicAccess": false,
                "supportsHttpsTrafficOnly": true,
                "isHnsEnabled": true
              },
              "tags": "[parameters('tags')]"
            },
            {
              "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
              "apiVersion": "2023-01-01",
              "name": "[format('{0}/default/consumption', variables('storageName'))]",
              "properties": {
                "publicAccess": "None"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageName'))]"
              ]
            },
            {
              "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
              "apiVersion": "2023-01-01",
              "name": "[format('{0}/default/curated', variables('storageName'))]",
              "properties": {
                "publicAccess": "None"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageName'))]"
              ]
            }
          ],
          "outputs": {
            "storageAccountName": {
              "type": "string",
              "value": "[variables('storageName')]"
            },
            "storageAccountId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageName'))]"
            },
            "consumptionContainerName": {
              "type": "string",
              "value": "consumption"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2025-04-01",
      "name": "[format('{0}-functionstore', parameters('baseName'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "baseName": {
            "value": "[parameters('baseName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "sku": {
            "value": "[parameters('functionStorageSku')]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.38.33.27573",
              "templateHash": "1522420462353621127"
            }
          },
          "parameters": {
            "baseName": {
              "type": "string",
              "metadata": {
                "description": "Base name prefix"
              }
            },
            "location": {
              "type": "string"
            },
            "sku": {
              "type": "string",
              "defaultValue": "Standard_LRS",
              "metadata": {
                "description": "Storage SKU for function runtime account"
              }
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            }
          },
          "variables": {
            "funcStorageName": "[toLower(replace(format('{0}funcstore', parameters('baseName')), '-', ''))]",
            "cleaned": "[replace(replace(variables('funcStorageName'), '_', ''), '.', '')]",
            "storageName": "[if(greater(length(variables('cleaned')), 24), substring(variables('cleaned'), 0, 24), variables('cleaned'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2023-01-01",
              "name": "[variables('storageName')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "[parameters('sku')]"
              },
              "kind": "StorageV2",
              "properties": {
                "minimumTlsVersion": "TLS1_2",
                "allowBlobPublicAccess": false,
                "supportsHttpsTrafficOnly": true,
                "isHnsEnabled": false
              },
              "tags": "[parameters('tags')]"
            }
          ],
          "outputs": {
            "functionStorageAccountName": {
              "type": "string",
              "value": "[variables('storageName')]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2025-04-01",
      "name": "[format('{0}-insights', parameters('baseName'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "baseName": {
            "value": "[parameters('baseName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "enableLogAnalytics": {
            "value": "[parameters('enableLogAnalytics')]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.38.33.27573",
              "templateHash": "6414459436755208564"
            }
          },
          "parameters": {
            "baseName": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "enableLogAnalytics": {
              "type": "bool",
              "defaultValue": true
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            }
          },
          "variables": {
            "aiName": "[toLower(format('{0}-ai', parameters('baseName')))]",
            "lawName": "[toLower(format('{0}-law', parameters('baseName')))]"
          },
          "resources": [
            {
              "type": "Microsoft.Insights/components",
              "apiVersion": "2020-02-02",
              "name": "[variables('aiName')]",
              "location": "[parameters('location')]",
              "kind": "web",
              "properties": {
                "Application_Type": "web",
                "Flow_Type": "Bluefield",
                "Request_Source": "rest"
              },
              "tags": "[parameters('tags')]"
            },
            {
              "condition": "[parameters('enableLogAnalytics')]",
              "type": "Microsoft.OperationalInsights/workspaces",
              "apiVersion": "2022-10-01",
              "name": "[variables('lawName')]",
              "location": "[parameters('location')]",
              "properties": {
                "retentionInDays": 30,
                "sku": {
                  "name": "PerGB2018"
                }
              },
              "tags": "[parameters('tags')]"
            }
          ],
          "outputs": {
            "appInsightsConnectionString": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('aiName')), '2020-02-02').ConnectionString]"
            },
            "appInsightsInstrumentationKey": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('aiName')), '2020-02-02').InstrumentationKey]"
            },
            "logAnalyticsWorkspaceId": {
              "type": "string",
              "value": "[if(parameters('enableLogAnalytics'), resourceId('Microsoft.OperationalInsights/workspaces', variables('lawName')), '')]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2025-04-01",
      "name": "[format('{0}-function', parameters('baseName'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "baseName": {
            "value": "[parameters('baseName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "planSku": {
            "value": "[parameters('functionSku')]"
          },
          "functionStorageAccountName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-functionstore', parameters('baseName'))), '2025-04-01').outputs.functionStorageAccountName.value]"
          },
          "dataLakeAccountName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-storage', parameters('baseName'))), '2025-04-01').outputs.storageAccountName.value]"
          },
          "appInsightsConnectionString": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-insights', parameters('baseName'))), '2025-04-01').outputs.appInsightsConnectionString.value]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.38.33.27573",
              "templateHash": "3071643493888113745"
            }
          },
          "parameters": {
            "baseName": {
              "type": "string",
              "metadata": {
                "description": "Base name for plan and function app"
              }
            },
            "location": {
              "type": "string",
              "metadata": {
                "description": "Deployment location"
              }
            },
            "planSku": {
              "type": "string",
              "defaultValue": "Y1",
              "metadata": {
                "description": "Plan SKU (Y1 consumption or EP* for Elastic Premium)"
              }
            },
            "functionStorageAccountName": {
              "type": "string",
              "metadata": {
                "description": "Function internal storage account (AzureWebJobsStorage)"
              }
            },
            "dataLakeAccountName": {
              "type": "string",
              "metadata": {
                "description": "Data lake storage account name for ingestion (exposed as STORAGE_ACCOUNT_NAME)"
              }
            },
            "octopusApiKey": {
              "type": "securestring",
              "defaultValue": "",
              "metadata": {
                "description": "Optional Octopus API Key (prefer post-deploy / Key Vault)"
              }
            },
            "octopusAccountNumber": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Optional Octopus Account Number"
              }
            },
            "appInsightsConnectionString": {
              "type": "string",
              "metadata": {
                "description": "App Insights connection string"
              }
            },
            "tags": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Tags to apply"
              }
            }
          },
          "variables": {
            "planName": "[toLower(format('{0}-plan', parameters('baseName')))]",
            "funcName": "[toLower(format('{0}-func', parameters('baseName')))]"
          },
          "resources": [
            {
              "type": "Microsoft.Web/serverfarms",
              "apiVersion": "2023-12-01",
              "name": "[variables('planName')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "[parameters('planSku')]",
                "tier": "[if(equals(parameters('planSku'), 'Y1'), 'Dynamic', 'ElasticPremium')]"
              },
              "kind": "functionapp,linux",
              "properties": {
                "reserved": true
              },
              "tags": "[parameters('tags')]"
            },
            {
              "type": "Microsoft.Web/sites",
              "apiVersion": "2023-12-01",
              "name": "[variables('funcName')]",
              "location": "[parameters('location')]",
              "kind": "functionapp,linux",
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('planName'))]",
                "httpsOnly": true,
                "siteConfig": {
                  "linuxFxVersion": "Python|3.11",
                  "appSettings": [
                    {
                      "name": "FUNCTIONS_EXTENSION_VERSION",
                      "value": "~4"
                    },
                    {
                      "name": "FUNCTIONS_WORKER_RUNTIME",
                      "value": "python"
                    },
                    {
                      "name": "PYTHON_VERSION",
                      "value": "3.11"
                    },
                    {
                      "name": "AzureWebJobsStorage",
                      "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1};EndpointSuffix=core.windows.net', parameters('functionStorageAccountName'), listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('functionStorageAccountName')), '2023-01-01').keys[0].value)]"
                    },
                    {
                      "name": "STORAGE_ACCOUNT_NAME",
                      "value": "[parameters('dataLakeAccountName')]"
                    },
                    {
                      "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
                      "value": "[parameters('appInsightsConnectionString')]"
                    },
                    {
                      "name": "OCTOPUS_API_KEY",
                      "value": "[if(greater(length(parameters('octopusApiKey')), 0), parameters('octopusApiKey'), '')]"
                    },
                    {
                      "name": "OCTOPUS_ACCOUNT_NUMBER",
                      "value": "[parameters('octopusAccountNumber')]"
                    }
                  ]
                }
              },
              "tags": "[parameters('tags')]",
              "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('planName'))]"
              ]
            }
          ],
          "outputs": {
            "functionAppName": {
              "type": "string",
              "value": "[variables('funcName')]"
            },
            "identityPrincipalId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Web/sites', variables('funcName')), '2023-12-01', 'full').identity.principalId]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', format('{0}-functionstore', parameters('baseName')))]",
        "[resourceId('Microsoft.Resources/deployments', format('{0}-insights', parameters('baseName')))]",
        "[resourceId('Microsoft.Resources/deployments', format('{0}-storage', parameters('baseName')))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2025-04-01",
      "name": "[format('{0}-rbac', parameters('baseName'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "principalId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-function', parameters('baseName'))), '2025-04-01').outputs.identityPrincipalId.value]"
          },
          "storageAccountName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-storage', parameters('baseName'))), '2025-04-01').outputs.storageAccountName.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.38.33.27573",
              "templateHash": "10508295484268561647"
            }
          },
          "parameters": {
            "principalId": {
              "type": "string"
            },
            "storageAccountName": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "scope": "[format('Microsoft.Storage/storageAccounts/{0}', parameters('storageAccountName'))]",
              "name": "[guid(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), parameters('principalId'), 'Storage Blob Data Contributor')]",
              "properties": {
                "principalId": "[parameters('principalId')]",
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'ba92f5b4-2d11-453d-a403-e96b0029c9fe')]",
                "principalType": "ServicePrincipal"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', format('{0}-function', parameters('baseName')))]",
        "[resourceId('Microsoft.Resources/deployments', format('{0}-storage', parameters('baseName')))]"
      ]
    },
    {
      "condition": "[parameters('enableLogAnalytics')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2025-04-01",
      "name": "[format('{0}-diag', parameters('baseName'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "functionAppName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-function', parameters('baseName'))), '2025-04-01').outputs.functionAppName.value]"
          },
          "storageAccountName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-storage', parameters('baseName'))), '2025-04-01').outputs.storageAccountName.value]"
          },
          "workspaceId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-insights', parameters('baseName'))), '2025-04-01').outputs.logAnalyticsWorkspaceId.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.38.33.27573",
              "templateHash": "17642611090750147270"
            }
          },
          "parameters": {
            "functionAppName": {
              "type": "string"
            },
            "storageAccountName": {
              "type": "string"
            },
            "workspaceId": {
              "type": "string"
            }
          },
          "resources": [
            {
              "condition": "[not(equals(parameters('workspaceId'), ''))]",
              "type": "Microsoft.Insights/diagnosticSettings",
              "apiVersion": "2021-05-01-preview",
              "scope": "[format('Microsoft.Web/sites/{0}', parameters('functionAppName'))]",
              "name": "func-diag",
              "properties": {
                "workspaceId": "[parameters('workspaceId')]",
                "logs": [
                  {
                    "category": "FunctionAppLogs",
                    "enabled": true,
                    "retentionPolicy": {
                      "enabled": false,
                      "days": 0
                    }
                  }
                ],
                "metrics": [
                  {
                    "category": "AllMetrics",
                    "enabled": true,
                    "retentionPolicy": {
                      "enabled": false,
                      "days": 0
                    }
                  }
                ]
              }
            },
            {
              "condition": "[not(equals(parameters('workspaceId'), ''))]",
              "type": "Microsoft.Insights/diagnosticSettings",
              "apiVersion": "2021-05-01-preview",
              "scope": "[format('Microsoft.Storage/storageAccounts/{0}', parameters('storageAccountName'))]",
              "name": "storage-diag",
              "properties": {
                "workspaceId": "[parameters('workspaceId')]",
                "metrics": [
                  {
                    "category": "Transaction",
                    "enabled": true,
                    "retentionPolicy": {
                      "enabled": false,
                      "days": 0
                    }
                  },
                  {
                    "category": "Capacity",
                    "enabled": true,
                    "retentionPolicy": {
                      "enabled": false,
                      "days": 0
                    }
                  }
                ]
              },
              "metadata": {
                "description": "Diagnostics for Storage Account (metrics only: Transaction & Capacity)"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', format('{0}-function', parameters('baseName')))]",
        "[resourceId('Microsoft.Resources/deployments', format('{0}-insights', parameters('baseName')))]",
        "[resourceId('Microsoft.Resources/deployments', format('{0}-storage', parameters('baseName')))]"
      ]
    }
  ],
  "outputs": {
    "storageAccountName": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-storage', parameters('baseName'))), '2025-04-01').outputs.storageAccountName.value]"
    },
    "functionAppName": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-function', parameters('baseName'))), '2025-04-01').outputs.functionAppName.value]"
    }
  }
}